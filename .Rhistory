government_response_index_for_display,
containment_health_index_for_display,
economic_support_index_for_display,
stringency_index_for_display) %>%
rename(`Government Response`= 'government_response_index_for_display',
`Containment Health`= 'containment_health_index_for_display',
`Economic Support` = 'economic_support_index_for_display',
`Stringency` = 'stringency_index_for_display') %>%
pivot_longer(cols = c('Government Response',
'Containment Health',
'Economic Support',
'Stringency'),
names_to = 'key_indices',
values_to = 'value') %>%
mutate(value = na_if(value,0)) %>%
mutate(key_indices = factor(key_indices,
levels = c('Government Response',
'Containment Health',
'Economic Support',
'Stringency'))) %>%
ggplot(aes(x = date,
y = value,
fill = key_indices)) +
geom_area(color = 'black', alpha = 0.6) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Government Reaction')) +
scale_fill_viridis_d(option = 'cividis',
name = 'Reaction Indices',
direction = -1) +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y',
expand = c(0,0)) +
scale_y_continuous(expand = c(0,0),
limits = c(0,300)) +
theme_bw() +
theme(axis.title = element_text(face = 'italic'))
plot_grid(p1, p2, p3, nrow = 3)
}
plot_state_indicators('California')
plot_state_indicators <- function(st){
# data:
df_main_state <- df_main %>%
filter(state == st)
# totals:
p1 <- df_main_state %>%
select(date,
confirmed_total,
deaths_total,
vaccine_doses_total) %>%
rename(`Total Vaccine Doses`= 'vaccine_doses_total',
`Total Confirmed Cases`= 'confirmed_total',
`Total Deaths` = 'deaths_total') %>%
pivot_longer(cols = c('Total Confirmed Cases',
'Total Deaths',
'Total Vaccine Doses'),
names_to = 'key_totals',
values_to = 'value') %>%
mutate(key_totals = factor(key_totals,
levels = c('Total Vaccine Doses',
'Total Confirmed Cases',
'Total Deaths'))) %>%
ggplot(aes(x = date,
y = value,
fill = key_totals)) +
geom_area(color = 'black', alpha = 0.6) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Key Indicators')) +
scale_fill_discrete(type = c('violetred', 'firebrick', 'black'),
name = 'Key Totals') +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y') +
scale_y_continuous(expand = c(0,0),
limits = c(0,NaN)) +
theme_bw() +
theme(axis.title = element_text(face = 'italic'),
axis.title = element_blank())
# 7 day averages:
p2 <- df_main_state %>%
select(date,
confirmed_daily_cases_7_day_average,
confirmed_deaths_7_day_average,
vaccine_doses_7d_average) %>%
rename(`Vaccines 7 day Avg.`= 'vaccine_doses_7d_average',
`Confirmed Cases 7 day Avg.`= 'confirmed_daily_cases_7_day_average',
`Confirmed Deaths 7 day Avg.` = 'confirmed_deaths_7_day_average') %>%
pivot_longer(cols = c('Confirmed Cases 7 day Avg.',
'Confirmed Deaths 7 day Avg.',
'Vaccines 7 day Avg.'),
names_to = 'key_averages',
values_to = 'value') %>%
mutate(value = na_if(value,0)) %>%
mutate(key_averages = factor(key_averages,
levels = c('Vaccines 7 day Avg.',
'Confirmed Cases 7 day Avg.',
'Confirmed Deaths 7 day Avg.'))) %>%
ggplot(aes(x = date,
y = value,
group = key_averages,
color = key_averages)) +
geom_line(linewidth = 0.9) +
geom_point(size = 1.2,
show.legend = FALSE) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Key Indicator Averages')) +
scale_color_manual(values = c('violetred', 'firebrick', 'black'),
name = '7 Day Averages') +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y') +
scale_y_log10() +
theme_bw() +
theme(axis.title = element_text(face = 'italic'),
axis.title.x = element_blank())
# Government Response metrics:
p3 <- df_main_state %>%
select(date,
government_response_index_for_display,
containment_health_index_for_display,
economic_support_index_for_display,
stringency_index_for_display) %>%
rename(`Government Response`= 'government_response_index_for_display',
`Containment Health`= 'containment_health_index_for_display',
`Economic Support` = 'economic_support_index_for_display',
`Stringency` = 'stringency_index_for_display') %>%
pivot_longer(cols = c('Government Response',
'Containment Health',
'Economic Support',
'Stringency'),
names_to = 'key_indices',
values_to = 'value') %>%
mutate(value = na_if(value,0)) %>%
mutate(key_indices = factor(key_indices,
levels = c('Government Response',
'Containment Health',
'Economic Support',
'Stringency'))) %>%
ggplot(aes(x = date,
y = value,
fill = key_indices)) +
geom_area(color = 'black', alpha = 0.6) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Government Reaction')) +
scale_fill_viridis_d(option = 'cividis',
name = 'Reaction Indices',
direction = -1) +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y',
expand = c(0,0)) +
scale_y_continuous(expand = c(0,0),
limits = c(0,300)) +
theme_bw() +
theme(axis.title = element_text(face = 'italic'),
axis.title.x = element_blank())
plot_grid(p1, p2, p3, nrow = 3)
}
plot_state_indicators('California')
plot_state_indicators <- function(st){
# data:
df_main_state <- df_main %>%
filter(state == st)
# totals:
p1 <- df_main_state %>%
select(date,
confirmed_total,
deaths_total,
vaccine_doses_total) %>%
rename(`Total Vaccine Doses`= 'vaccine_doses_total',
`Total Confirmed Cases`= 'confirmed_total',
`Total Deaths` = 'deaths_total') %>%
pivot_longer(cols = c('Total Confirmed Cases',
'Total Deaths',
'Total Vaccine Doses'),
names_to = 'key_totals',
values_to = 'value') %>%
mutate(key_totals = factor(key_totals,
levels = c('Total Vaccine Doses',
'Total Confirmed Cases',
'Total Deaths'))) %>%
ggplot(aes(x = date,
y = value,
fill = key_totals)) +
geom_area(color = 'black', alpha = 0.6) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Key Indicators')) +
scale_fill_discrete(type = c('violetred', 'firebrick', 'black'),
name = 'Key Totals') +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y') +
scale_y_continuous(expand = c(0,0),
limits = c(0,NaN)) +
theme_bw() +
theme(axis.title = element_blank())
# 7 day averages:
p2 <- df_main_state %>%
select(date,
confirmed_daily_cases_7_day_average,
confirmed_deaths_7_day_average,
vaccine_doses_7d_average) %>%
rename(`Vaccines 7 day Avg.`= 'vaccine_doses_7d_average',
`Confirmed Cases 7 day Avg.`= 'confirmed_daily_cases_7_day_average',
`Confirmed Deaths 7 day Avg.` = 'confirmed_deaths_7_day_average') %>%
pivot_longer(cols = c('Confirmed Cases 7 day Avg.',
'Confirmed Deaths 7 day Avg.',
'Vaccines 7 day Avg.'),
names_to = 'key_averages',
values_to = 'value') %>%
mutate(value = na_if(value,0)) %>%
mutate(key_averages = factor(key_averages,
levels = c('Vaccines 7 day Avg.',
'Confirmed Cases 7 day Avg.',
'Confirmed Deaths 7 day Avg.'))) %>%
ggplot(aes(x = date,
y = value,
group = key_averages,
color = key_averages)) +
geom_line(linewidth = 0.9) +
geom_point(size = 1.2,
show.legend = FALSE) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Key Indicator Averages')) +
scale_color_manual(values = c('violetred', 'firebrick', 'black'),
name = '7 Day Averages') +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y') +
scale_y_log10() +
theme_bw() +
theme(axis.title = element_text(face = 'italic'),
axis.title.x = element_blank())
# Government Response metrics:
p3 <- df_main_state %>%
select(date,
government_response_index_for_display,
containment_health_index_for_display,
economic_support_index_for_display,
stringency_index_for_display) %>%
rename(`Government Response`= 'government_response_index_for_display',
`Containment Health`= 'containment_health_index_for_display',
`Economic Support` = 'economic_support_index_for_display',
`Stringency` = 'stringency_index_for_display') %>%
pivot_longer(cols = c('Government Response',
'Containment Health',
'Economic Support',
'Stringency'),
names_to = 'key_indices',
values_to = 'value') %>%
mutate(value = na_if(value,0)) %>%
mutate(key_indices = factor(key_indices,
levels = c('Government Response',
'Containment Health',
'Economic Support',
'Stringency'))) %>%
ggplot(aes(x = date,
y = value,
fill = key_indices)) +
geom_area(color = 'black', alpha = 0.6) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Government Reaction')) +
scale_fill_viridis_d(option = 'cividis',
name = 'Reaction Indices',
direction = -1) +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y',
expand = c(0,0)) +
scale_y_continuous(expand = c(0,0),
limits = c(0,300)) +
theme_bw() +
theme(axis.title = element_text(face = 'italic'),
axis.title.y = element_blank())
plot_grid(p1, p2, p3, nrow = 3)
}
plot_state_indicators('California')
plot_state_indicators <- function(st){
# data:
df_main_state <- df_main %>%
filter(state == st)
# totals:
p1 <- df_main_state %>%
select(date,
confirmed_total,
deaths_total,
vaccine_doses_total) %>%
rename(`Total Vaccine Doses`= 'vaccine_doses_total',
`Total Confirmed Cases`= 'confirmed_total',
`Total Deaths` = 'deaths_total') %>%
pivot_longer(cols = c('Total Confirmed Cases',
'Total Deaths',
'Total Vaccine Doses'),
names_to = 'key_totals',
values_to = 'value') %>%
mutate(key_totals = factor(key_totals,
levels = c('Total Vaccine Doses',
'Total Confirmed Cases',
'Total Deaths'))) %>%
ggplot(aes(x = date,
y = value,
fill = key_totals)) +
geom_area(color = 'black', alpha = 0.6) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Key Indicators')) +
scale_fill_discrete(type = c('violetred', 'firebrick', 'black'),
name = 'Key Totals') +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y') +
scale_y_continuous(expand = c(0,0),
limits = c(0,NaN)) +
theme_bw() +
theme(axis.title.x = element_blank(),
axis.title = element_text(face = 'italic'))
# 7 day averages:
p2 <- df_main_state %>%
select(date,
confirmed_daily_cases_7_day_average,
confirmed_deaths_7_day_average,
vaccine_doses_7d_average) %>%
rename(`Vaccines 7 day Avg.`= 'vaccine_doses_7d_average',
`Confirmed Cases 7 day Avg.`= 'confirmed_daily_cases_7_day_average',
`Confirmed Deaths 7 day Avg.` = 'confirmed_deaths_7_day_average') %>%
pivot_longer(cols = c('Confirmed Cases 7 day Avg.',
'Confirmed Deaths 7 day Avg.',
'Vaccines 7 day Avg.'),
names_to = 'key_averages',
values_to = 'value') %>%
mutate(value = na_if(value,0)) %>%
mutate(key_averages = factor(key_averages,
levels = c('Vaccines 7 day Avg.',
'Confirmed Cases 7 day Avg.',
'Confirmed Deaths 7 day Avg.'))) %>%
ggplot(aes(x = date,
y = value,
group = key_averages,
color = key_averages)) +
geom_line(linewidth = 0.9) +
geom_point(size = 1.2,
show.legend = FALSE) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Key Indicator Averages')) +
scale_color_manual(values = c('violetred', 'firebrick', 'black'),
name = '7 Day Averages') +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y') +
scale_y_log10() +
theme_bw() +
theme(axis.title = element_text(face = 'italic'),
axis.title.x = element_blank())
# Government Response metrics:
p3 <- df_main_state %>%
select(date,
government_response_index_for_display,
containment_health_index_for_display,
economic_support_index_for_display,
stringency_index_for_display) %>%
rename(`Government Response`= 'government_response_index_for_display',
`Containment Health`= 'containment_health_index_for_display',
`Economic Support` = 'economic_support_index_for_display',
`Stringency` = 'stringency_index_for_display') %>%
pivot_longer(cols = c('Government Response',
'Containment Health',
'Economic Support',
'Stringency'),
names_to = 'key_indices',
values_to = 'value') %>%
mutate(value = na_if(value,0)) %>%
mutate(key_indices = factor(key_indices,
levels = c('Government Response',
'Containment Health',
'Economic Support',
'Stringency'))) %>%
ggplot(aes(x = date,
y = value,
fill = key_indices)) +
geom_area(color = 'black', alpha = 0.6) +
labs(x = 'Date',
y = 'Value',
title = paste0('State: ', st, ' - COVID19 Government Reaction')) +
scale_fill_viridis_d(option = 'cividis',
name = 'Reaction Indices',
direction = -1) +
scale_x_date(date_breaks = '2 month',
date_labels = '%b %Y',
expand = c(0,0)) +
scale_y_continuous(expand = c(0,0),
limits = c(0,300)) +
theme_bw() +
theme(axis.title = element_text(face = 'italic'))
plot_grid(p1, p2, p3, nrow = 3)
}
plot_state_indicators('California')
key_states <- c('California',
'New York',
'North Dakota',
'Florida')
key_states
for(st in key_states){
ggsave(plot = plot_state_indicators(st),
file = paste0('./exploration_visuals/08_government_efforts_over_time_', st,'.png'),
width = 30, height = 20, units = 'cm')
}
# to create a map:
df_main %>%
filter(date == max_date) %>%
# for the required data for geospatial mapping:
left_join(x = .,
y = map_data('state'),
by = c('state_' = 'region')) %>%
# this gives us a view of the different states mapped to each region
ggplot(aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = region),
color = 'black',
linewidth = 0.08) +
coord_quickmap() +
theme_void() +
scale_fill_viridis_d(option = 'D', alpha = 0.7)
plot_confirmed_cases_total('West-group2') # testing the plotting function
# the different plots for each region-group:
# these plots will be exported to a new folder created in the project
# directory called 'exploration_visuals'
for(pair in region_group_pairs){
ggsave(plot = plot_confirmed_cases_total(pair),
file = paste0('./exploration_visuals/01_confirmed_cases_deaths_',pair,'.png'),
width = 30, height = 20, units = 'cm')
}
ggsave(plot = rel_plot_cases_deaths1,
file = paste0('./exploration_visuals/02_relative_count_confirmed_cases_deaths_final_date.png'),
width = 30, height = 20, units = 'cm')
ggsave(plot = rel_plot_cases_deaths2,
file = paste0('./exploration_visuals/02_relative_count_confirmed_cases_deaths_final_date_map.png'),
width = 35, height = 25, units = 'cm')
for (pair in region_group_pairs) {
ggsave(plot = plot_confirmed_cases_deaths_7d_avg(pair),
file = paste0('./exploration_visuals/03_confirmed_cases_deaths_7d_avg_',pair,'.jpeg'),
width = 30, height = 20, units = 'cm', dpi = 600)
}
for (pair in region_group_pairs) {
ggsave(plot = plot_confirmed_cases_deaths_7d_avg(pair),
file = paste0('./exploration_visuals/03_confirmed_cases_deaths_7d_avg_',pair,'.png'),
width = 30, height = 20, units = 'cm', dpi = 600)
}
ggsave(plot = rel_plot_cases_deaths2,
file = paste0('./exploration_visuals/02_relative_count_confirmed_cases_deaths_final_date_map.jpeg'),
width = 35, height = 25, units = 'cm')
ggsave(plot = plot_confirmed_cases_deaths_vs_gdp,
file = paste0('./exploration_visuals/04_confirmed_cases_deaths_vs_gdp','.png'),
width = 30, height = 25, units = 'cm')
ggsave(plot = plot_confirmed_cases_deaths_vs_gdp_pop,
file = paste0('./exploration_visuals/04_confirmed_cases_deaths_vs_gdp_population','.png'),
width = 30, height = 25, units = 'cm')
for(st in key_states){
ggsave(plot = plot_state_indicators(st),
file = paste0('./exploration_visuals/08_government_efforts_over_time_', st,'.png'),
width = 30, height = 20, units = 'cm')
}
key_states <- c('California',
'New York',
'North Dakota',
'Florida',
'Oregon',
'Utah')
for(st in key_states){
ggsave(plot = plot_state_indicators(st),
file = paste0('./exploration_visuals/07_government_efforts_over_time_', st,'.png'),
width = 30, height = 20, units = 'cm')
}
key_states <- c('California',
'New York',
'North Dakota',
'Florida',
'Oregon',
'Utah') %>%
clean_names()
key_states <- c('California',
'New York',
'North Dakota',
'Florida',
'Oregon',
'Utah') %>%
clean_names(.)
key_states <- clean_names(c('California',
'New York',
'North Dakota',
'Florida',
'Oregon',
'Utah'))
for(st in key_states){
ggsave(plot = plot_state_indicators(st),
file = paste0('./exploration_visuals/07_government_efforts_over_time_',str_remove_all(str_to_lower(st), " "),'.png'),
width = 30, height = 20, units = 'cm')
}
for(st in key_states){
ggsave(plot = plot_state_indicators(st),
file = paste0('./exploration_visuals/07_state_metrics_over_time_',str_remove_all(str_to_lower(st), " "),'.png'),
width = 30, height = 20, units = 'cm')
}
key_states <- c('California',
'New York',
'North Dakota',
'Florida',
'Oregon',
'Utah',
'Texas')
for(st in key_states){
ggsave(plot = plot_state_indicators(st),
file = paste0('./exploration_visuals/07_state_metrics_over_time_',str_remove_all(str_to_lower(st), " "),'.png'),
width = 30, height = 20, units = 'cm')
}
